　tsp2.cでは，山登り法(Hill Climbing)，焼きなまし法(Simulated Annealing)，遺伝的アルゴリズム(Genetic Algorithm)，タブー探索法(Tabu Search)の4種類のアルゴリズムを実装した．これらはメタヒューリスティクスの有名な手法である．

以下にそれぞれのアルゴリズムの仕組みとその特徴を記す．
1. 山登り法(Hill Climbing)
　解が改善された場合は必ず採用し，解が改善されなかった場合は必ず採用しない．アルゴリズムが最も単純で高速だが，局所解に陥りやすいため，解の正確性があまり保証されない．
2. 焼きなまし法(Simulated Annealing)
　解が改善された場合は必ず採用し，はじめのうちは解が改善されなくとも採用するが，最後の方では解が改善されないと採用しないため，1.の山登り法に近くなる．アルゴリズムはあまり複雑でなく動作も高速の割に，局所解に陥ってしまうことは少ないので，良いアルゴリズムと考えられる．
3. 遺伝的アルゴリズム(Genetic Algorithm)
　生物の遺伝の様子から知見を得たメタヒューリスティクス手法であり，自然界における生物の選択，交叉，突然変異を組み合わせて進化を繰り返すことで解を見つける手法である．アルゴリズムが複雑で，動作に最も時間がかかるが，局所解に陥ることは稀で，解の信頼性は最も高い．
4. タブー探索法(Tabu Search)
　人工知能から知見を得たメタヒューリスティクス手法であり，一度行った操作で失敗した場合は「タブーリスト」に書き加えて，同じ失敗を繰り返さないようにすることで解を見つける手法である．アルゴリズムは遺伝的アルゴリズムと同等程度に複雑だが，動作にはそれほど時間はかからない．局所解に陥ることは少ないが，遺伝的アルゴリズムほど解の信頼性は高くない．

timeコマンドを使って得たそれぞれの手法における実行時間とその実行結果を下に記す．

1. 山登り法(Hill Climbing) ... 0.00秒
> gcc -Wall tsp2.c -o tsp2
> /usr/bin/time ./tsp2 20 1
total distance = 214.730642

                                     C_6
                                   ***
                                ***  *
          C_5                ***     *
         * **             ***        *
         *   **        ***           *
        *      **   ***              *
        *        CC_10               C_0*
        *                                *****
       *                                      ****
       *                                          C_9
       *                 C_12                     *
      *                ** *                       *
      C_14            *    **                    *
       *            **       **                  *
        **         *           **                *
          *       C_1            *               *
           **    *                **            *
             *  *                   **          *
              C_19                    **        *
             * *                        *       *
            *  *                         **    C_7
          **    *                          **   *
         *      *                            **  *
        *        *                             C_15*
       C_16      *                              *   *
        **        *                              **  *
          *       C_4                              *  C_18
           **      *                                ** *
             **     *                                 * **
               *    *                                  C_2*
                **   *                                 C_17*
                  ** *                                  *   **
                    * *                                  *    *
                     ***                                 *     *
                       *                                  * ****C_11
                        C_13                               C_3


2. 焼きなまし法(Simulated Annealing) ... 0.15秒
> gcc -Wall tsp2.c -o tsp2
> /usr/bin/time ./tsp2 20 2
total distance = 188.150650

                                     C_6
                                     **
                                     * *
          C_5                        *  **
          ***                        *    *
         *   **                      *     **
         *     **                    *       *
         *       CC_10             **C_0      *
        *          **           ***            **
        *            **      ***                 *
        *              ** ***                     C_9
       *                 C_12                    *
       *                                         *
      C_14                                       *
      *                                          *
      *                                         *
      *           C_1                           *
      *          **                             *
      *        ** *                             *
      *       C_19*                            *
      *      *    *                            *
      *     *     *                            C_7
      *   **      *                            *
      *  *        *                            *
      * *         *                            C_15
       C_16       *                             **
                  *                               ***
                  C_4                                *C_18
                   *                                   *
                   *                                   *
                    *                                  C_2
                     *                                 C_17
                     *                                  **
                      *                                   ***
                      *                                      **
                       *                                       *C_11
                        C_13*******************************C_3**


3. 遺伝的アルゴリズム(Genetic Algorithm) ... 6.24秒
> gcc -Wall tsp2.c -o tsp2
> /usr/bin/time ./tsp2 20 3
total distance = 188.150650

                                     C_6
                                     **
                                     * *
          C_5                        *  **
          ***                        *    *
         *   **                      *     **
         *     **                    *       *
         *       CC_10             **C_0      *
        *          **           ***            **
        *            **      ***                 *
        *              ** ***                     C_9
       *                 C_12                    *
       *                                         *
      C_14                                       *
      *                                          *
      *                                         *
      *           C_1                           *
      *          **                             *
      *        ** *                             *
      *       C_19*                            *
      *      *    *                            *
      *     *     *                            C_7
      *   **      *                            *
      *  *        *                            *
      * *         *                            C_15
       C_16       *                             **
                  *                               ***
                  C_4                                *C_18
                   *                                   *
                   *                                   *
                    *                                  C_2
                     *                                 C_17
                     *                                  **
                      *                                   ***
                      *                                      **
                       *                                       *C_11
                        C_13*******************************C_3**


4. タブー探索法(Tabu Search) ... 0.34秒
> gcc -Wall tsp2.c -o tsp2
> /usr/bin/time ./tsp2 20 4
total distance = 192.300624

                                     C_6
                                     **
                                     * *
          C_5                        *  **
          ***                        *    *
         *   **                      *     **
         *     **                    *       *
         *       CC_10             **C_0      *
        *        *              ***            **
        *        *           ***                 *
        *        *        ***                     C_9
       *        *        C_12                    *
       *        *      **                        *
      C_14      *     *                          *
      *        *    **                           *
      *        *   *                            *
      *        *  C_1                           *
      *       * **                              *
      *       **                                *
      *       C_19                             *
      *                                        *
      *                                        C_7
      *                                        *
      *                                        *
      *                                        C_15
       C_16*                                    **
            ******                                ***
                  C_4                                *C_18
                   *                                   *
                   *                                   *
                    *                                  C_2
                     *                                 C_17
                     *                                  **
                      *                                   ***
                      *                                      **
                       *                                       *C_11
                        C_13*******************************C_3**


　2〜4のアルゴリズムは，パラメータの調整具合によって実行結果が変わってしまうため一概に優劣を判断できるわけではないが，できるだけ良い解がでるように自分でチューニングしてみた結果が上記のものである．今回の実装では，2.の焼きなまし法が最も高速で最良の結果が出た．3.の遺伝的アルゴリズムも焼きなまし法と同じ結果になったが，実行時間が焼きなまし法の40倍以上であるため，その点は劣っているといえる．4.のタブー探索法は2.の焼きなまし法の2倍程度の実行時間であったが，解が少しだけよくないものを出力してしまっているため，解の信頼性は高くないと言える．
